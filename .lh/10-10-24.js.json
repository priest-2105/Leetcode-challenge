{
    "sourceFile": "10-10-24.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1728522341566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728522347152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,24 +4,12 @@\n         for (let i = 0; i < n.length; i++){\r\n              return n + i;\r\n          };\r\n  };\r\n+}\r\n  \r\n  /** \r\n   * const counter = createCounter(10)\r\n   * counter() // 10\r\n   * counter() // 11\r\n   * counter() // 12\r\n-  */var createCounter = function(n) {\r\n-\r\n-   return function counter() {\r\n-    for (let i = 0; i < n.length; i++){\r\n-         return n + i;\r\n-     };\r\n-};\r\n-\r\n-/** \r\n-* const counter = createCounter(10)\r\n-* counter() // 10\r\n-* counter() // 11\r\n-* counter() // 12\r\n\\ No newline at end of file\n-*/\n+  */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522352253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,11 @@\n         for (let i = 0; i < n.length; i++){\r\n              return n + i;\r\n          };\r\n  };\r\n-}\r\n+\r\n+\r\n+};\r\n  \r\n  /** \r\n   * const counter = createCounter(10)\r\n   * counter() // 10\r\n"
                },
                {
                    "date": 1728522359626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n };\r\n  \r\n  /** \r\n-  * const counter = createCounter(10)\r\n-  * counter() // 10\r\n-  * counter() // 11\r\n-  * counter() // 12\r\n-  */\n\\ No newline at end of file\n+* const counter = createCounter(10)\r\n+   counter() // 10\r\n+   counter() // 11\r\n+   counter() // 12\r\n+  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522367360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n \r\n \r\n };\r\n  \r\n- /** \r\n+  \r\n * const counter = createCounter(10)\r\n-   counter() // 10\r\n-   counter() // 11\r\n-   counter() // 12\r\n+   counter() \r\n+   counter() \r\n+   counter() \r\n   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522460995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,15 @@\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n var createCounter = function(n) {\r\n \r\n     return function counter() {\r\n         for (let i = 0; i < n.length; i++){\r\n@@ -9,9 +20,9 @@\n \r\n };\r\n  \r\n   \r\n-* const counter = createCounter(10)\r\n+ const counter = createCounter(10)\r\n    counter() \r\n    counter() \r\n    counter() \r\n   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522473958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,45 @@\n \r\n+Code\r\n+Testcase\r\n+Testcase\r\n+Test Result\r\n+2620. Counter\r\n+Solved\r\n+Easy\r\n+Companies\r\n+Hint\r\n+Given an integer n, return a counter function. This counter function initially returns n and then returns 1 more than the previous value every subsequent time it is called (n, n + 1, n + 2, etc).\r\n \r\n+ \r\n \r\n+Example 1:\r\n \r\n+Input: \r\n+n = 10 \r\n+[\"call\",\"call\",\"call\"]\r\n+Output: [10,11,12]\r\n+Explanation: \r\n+counter() = 10 // The first time counter() is called, it returns n.\r\n+counter() = 11 // Returns 1 more than the previous time.\r\n+counter() = 12 // Returns 1 more than the previous time.\r\n+Example 2:\r\n \r\n+Input: \r\n+n = -2\r\n+[\"call\",\"call\",\"call\",\"call\",\"call\"]\r\n+Output: [-2,-1,0,1,2]\r\n+Explanation: counter() initially returns -2. Then increases after each sebsequent call.\r\n \r\n \r\n \r\n \r\n \r\n \r\n+\r\n+\r\n+\r\n+\r\n var createCounter = function(n) {\r\n \r\n     return function counter() {\r\n         for (let i = 0; i < n.length; i++){\r\n"
                },
                {
                    "date": 1728522622185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,35 @@\n \r\n-Code\r\n-Testcase\r\n-Testcase\r\n-Test Result\r\n-2620. Counter\r\n-Solved\r\n-Easy\r\n-Companies\r\n-Hint\r\n-Given an integer n, return a counter function. This counter function initially returns n and then returns 1 more than the previous value every subsequent time it is called (n, n + 1, n + 2, etc).\r\n+// Code\r\n+// Testcase\r\n+// Testcase\r\n+// Test Result\r\n+// 2620. Counter\r\n+// Solved\r\n+// Easy\r\n+// Companies\r\n+// Hint\r\n+// Given an integer n, return a counter function. This counter function initially returns n and then returns 1 more than the previous value every subsequent time it is called (n, n + 1, n + 2, etc).\r\n \r\n  \r\n \r\n-Example 1:\r\n+// Example 1:\r\n \r\n-Input: \r\n-n = 10 \r\n-[\"call\",\"call\",\"call\"]\r\n-Output: [10,11,12]\r\n-Explanation: \r\n-counter() = 10 // The first time counter() is called, it returns n.\r\n-counter() = 11 // Returns 1 more than the previous time.\r\n-counter() = 12 // Returns 1 more than the previous time.\r\n-Example 2:\r\n+// Input: \r\n+// n = 10 \r\n+// [\"call\",\"call\",\"call\"]\r\n+// Output: [10,11,12]\r\n+// Explanation: \r\n+// counter() = 10 // The first time counter() is called, it returns n.\r\n+// counter() = 11 // Returns 1 more than the previous time.\r\n+// counter() = 12 // Returns 1 more than the previous time.\r\n+// Example 2:\r\n \r\n-Input: \r\n-n = -2\r\n-[\"call\",\"call\",\"call\",\"call\",\"call\"]\r\n-Output: [-2,-1,0,1,2]\r\n-Explanation: counter() initially returns -2. Then increases after each sebsequent call.\r\n+// Input: \r\n+// n = -2\r\n+// [\"call\",\"call\",\"call\",\"call\",\"call\"]\r\n+// Output: [-2,-1,0,1,2]\r\n+// Explanation: counter() initially returns -2. Then increases after each sebsequent call.\r\n \r\n \r\n \r\n \r\n@@ -54,5 +54,6 @@\n  const counter = createCounter(10)\r\n    counter() \r\n    counter() \r\n    counter() \r\n-  \n\\ No newline at end of file\n+  \r\n+c\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522633339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,11 +49,10 @@\n \r\n \r\n };\r\n  \r\n-  \r\n  const counter = createCounter(10)\r\n    counter() \r\n    counter() \r\n    counter() \r\n   \r\n-c\n\\ No newline at end of file\n+createCounter();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522647788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,6 +53,5 @@\n  const counter = createCounter(10)\r\n    counter() \r\n    counter() \r\n    counter() \r\n-  \r\n-createCounter();\n\\ No newline at end of file\n+   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522656137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,15 +40,11 @@\n \r\n \r\n var createCounter = function(n) {\r\n \r\n-    return function counter() {\r\n         for (let i = 0; i < n.length; i++){\r\n              return n + i;\r\n          };\r\n- };\r\n-\r\n-\r\n };\r\n  \r\n  const counter = createCounter(10)\r\n    counter() \r\n"
                },
                {
                    "date": 1728522800796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \r\n var createCounter = function(n) {\r\n \r\n         for (let i = 0; i < n.length; i++){\r\n-             return n + i;\r\n+             return n++;\r\n          };\r\n };\r\n  \r\n  const counter = createCounter(10)\r\n"
                },
                {
                    "date": 1728522808073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,14 +40,19 @@\n \r\n \r\n var createCounter = function(n) {\r\n \r\n+    return function counter() {\r\n         for (let i = 0; i < n.length; i++){\r\n-             return n++;\r\n+             return n + i;\r\n          };\r\n+ };\r\n+\r\n+\r\n };\r\n  \r\n\\ No newline at end of file\n  const counter = createCounter(10)\r\n    counter() \r\n    counter() \r\n    counter() \r\n-   \n+  \r\n+createCounter();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728522813453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,9 @@\n \r\n var createCounter = function(n) {\r\n \r\n     return function counter() {\r\n-        for (let i = 0; i < n.length; i++){\r\n              return n + i;\r\n-         };\r\n  };\r\n \r\n \r\n };\r\n"
                },
                {
                    "date": 1728732726329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,15 +35,12 @@\n \r\n \r\n \r\n \r\n-\r\n-\r\n-\r\n var createCounter = function(n) {\r\n \r\n     return function counter() {\r\n-             return n + i;\r\n+             return n++;\r\n  };\r\n \r\n \r\n };\r\n"
                },
                {
                    "date": 1728732842283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,5 +49,6 @@\n    counter() \r\n    counter() \r\n    counter() \r\n   \r\n-createCounter();\n\\ No newline at end of file\n+createCounter();\r\n+\r\n"
                },
                {
                    "date": 1728733079161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,4 +51,5 @@\n    counter() \r\n   \r\n createCounter();\r\n \r\n+\r\n"
                },
                {
                    "date": 1728734776087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,10 @@\n \r\n \r\n \r\n \r\n+\r\n+\r\n var createCounter = function(n) {\r\n \r\n     return function counter() {\r\n              return n++;\r\n"
                },
                {
                    "date": 1728734963165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,12 +33,8 @@\n \r\n \r\n \r\n \r\n-\r\n-\r\n-\r\n-\r\n var createCounter = function(n) {\r\n \r\n     return function counter() {\r\n              return n++;\r\n"
                },
                {
                    "date": 1728953308116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,8 @@\n // Output: [-2,-1,0,1,2]\r\n // Explanation: counter() initially returns -2. Then increases after each sebsequent call.\r\n \r\n \r\n-\r\n-\r\n-\r\n var createCounter = function(n) {\r\n \r\n     return function counter() {\r\n              return n++;\r\n"
                }
            ],
            "date": 1728522341566,
            "name": "Commit-0",
            "content": "var createCounter = function(n) {\r\n\r\n    return function counter() {\r\n        for (let i = 0; i < n.length; i++){\r\n             return n + i;\r\n         };\r\n };\r\n \r\n /** \r\n  * const counter = createCounter(10)\r\n  * counter() // 10\r\n  * counter() // 11\r\n  * counter() // 12\r\n  */var createCounter = function(n) {\r\n\r\n   return function counter() {\r\n    for (let i = 0; i < n.length; i++){\r\n         return n + i;\r\n     };\r\n};\r\n\r\n/** \r\n* const counter = createCounter(10)\r\n* counter() // 10\r\n* counter() // 11\r\n* counter() // 12\r\n*/"
        }
    ]
}